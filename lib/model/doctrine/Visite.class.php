<?php

/**
 * Visite
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    sf_sandbox
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class Visite extends BaseVisite
{
  public function getExpositionContexte()
  {
    if($this->getExposition() != null )
      return $this->getExposition()->getContexte();
    else
      return "";
  }

  public function getVisiteurContexte()
  {
    if($this->getVisiteur() != null )
      return $this->getVisiteur()->getContexte();
    else
      return "";
  }

  public function getVisiteurCreatedAt()
  {
    if($this->getVisiteur() != null )
      return $this->getVisiteur()->getCreatedAt();
    else
      return "";
  }

  public function getVisiteurCodeLangue()
  {
    if($this->getVisiteur() != null )
      return $this->getVisiteur()->getCodeLangue();
    else
      return "";
  }

  public function getVisiteurEmail()
  {
    if($this->getVisiteur() != null )
      return $this->getVisiteur()->getEmail();
    else
      return "";
  }

  public function getVisiteurNom()
  {
    if($this->getVisiteur() != null )
      return $this->getVisiteur()->getNom();
    else
      return "";
  }

  public function getVisiteurPrenom()
  {
    if($this->getVisiteur() != null )
      return $this->getVisiteur()->getPrenom();
    else
      return "";
  }

  public function getVisiteurPseudoSon()
  {
    if($this->getVisiteur() != null )
      return $this->getVisiteur()->getPseudoSon();
    else
      return "";
  }

  public function getVisiteurGenre()
  {
    if($this->getVisiteur() != null )
      return $this->getVisiteur()->getGenre();
    else
      return "";
  }

  public function getVisiteurDateNaissance()
  {
    if($this->getVisiteur() != null )
      return $this->getVisiteur()->getDateNaissance();
    else
      return "";
  }

  public function getVisiteurCodePostal()
  {
    if($this->getVisiteur() != null )
      return $this->getVisiteur()->getCodePostal();
    else
      return "";
  }

  public function getVisiteurPreferenceMedia()
  {
    if($this->getVisiteur() != null )
    {
      $preference_medias = $this->getVisiteur()->getPreferenceMedia();
      $libelle = '';
      foreach ($preference_medias as $media)
      {
        $libelle .= $media->getLibelle().', ';
      }
      return $libelle;
    }
    else
      return "";
  }

  public function getVisiteurNumMobile()
  {
    if($this->getVisiteur() != null )
      return $this->getVisiteur()->getNumMobile();
    else
      return "";
  }

  public function getVisiteurGoogleId()
  {
    if($this->getVisiteur() != null )
      return $this->getVisiteur()->getGoogleId();
    else
      return "";
  }

  public function getVisiteurTwitterId()
  {
    if($this->getVisiteur() != null )
      return $this->getVisiteur()->getTwitterId();
    else
      return "";
  }

  public function getVisiteurFlickrId()
  {
    if($this->getVisiteur() != null )
      return $this->getVisiteur()->getFlickrId();
    else
      return "";
  }

  public function getVisiteurDailymotionId()
  {
    if($this->getVisiteur() != null )
      return $this->getVisiteur()->getDailymotionId();
    else
      return "";
  }

  public function __call($method, $arguments)
  {
    if($method == 'setGuid')
    {
      return $this->set('guid', Guid::generate());
    }
    else
    {
      return parent::__call($method, $arguments);
    }
  }

  public function save(Doctrine_Connection $conn = null)
  {
    $this->setIsTosync(1);
    if($this->getParcoursId() != null)
    {
      $this->setParcoursLibelle($this->getParcours()->getLibelle());
    }
    if($this->getExpositionId() != null)
    {
      $this->setExpositionLibelle($this->getExposition()->getLibelle());
    }
    parent::save($conn);
  }

  public function  delete(Doctrine_Connection $conn = null)
  {
    $guid = $this->getGuid();

    parent::delete($conn);

    $delete_log = new DeleteLog();
    $delete_log->setGuid($guid);
    $delete_log->setModelName(get_class($this));
    $delete_log->save();
  }
}
