<?php

/**
 * Interactif
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    sf_sandbox
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class Interactif extends BaseInteractif
{
  public function  __toString() {
    return $this->getLibelle() ? $this->getLibelle() : '';
  }

  public function generateImage1Filename(sfValidatedFile $file)
  {
    return "image1".$file->getExtension();
  }

  public function generateImage2Filename(sfValidatedFile $file)
  {
    return "image2".$file->getExtension();
  }

  public function generateImage3Filename(sfValidatedFile $file)
  {
    return "image3".$file->getExtension();
  }

  public function getInteractifDataPath()
  {
    return sfConfig::get('sf_web_dir')."/interactif/".$this->guid;
  }

  public function createDataFolder()
  {
    $fileSystem = new sfFilesystem();
    $oldumask = umask(0);
    $fileSystem->mkdirs($this->getInteractifDataPath(), 0755);
    $fileSystem->chmod($this->getInteractifDataPath(), 0755);
    umask($oldumask);
  }

  public function __call($method, $arguments)
  {
    if($method == 'setGuid')
    {
      return $this->set('guid', Guid::generate());
    }
    else
    {
      return parent::__call($method, $arguments);
    }
  }

  public function save(Doctrine_Connection $conn = null)
  {
    if($this->isNew())
    {
      $this->createDataFolder();
        if($this->getGuid() == null && $this->getLibelle() != ''){
            $this->setGuid(Guid::generate());
            /*
            if($this->getLibelle() == ''){
                $referer = $_SERVER["HTTP_REFERER"];
                $request = ($_SERVER['REQUEST_URI']);
                $get = print_r($_GET, true);
                $post = print_r($_POST, true);
                //die("referer=".$referer."\n<br/>"."request=".$request."\n<br/>"."get=".$get."\n<br/>"."post=".$post);
                mail('sredeuil@clever-age.com;s.etheve@cap-sciences.net', '[SERVERVIP] interactif null', "referer=".$referer."\n<br/>"."request=".$request."get=".$get."\n<br/>"."post=".$post);
            }
            */
        }
    }

    $this->setIsTosync(1);
    parent::save($conn);
  }

  public function  delete(Doctrine_Connection $conn = null)
  {
    $guid = $this->getGuid();

    parent::delete($conn);

    $delete_log = new DeleteLog();
    $delete_log->setGuid($guid);
    $delete_log->setModelName(get_class($this));
    $delete_log->save();

    $fileSystem = new sfFilesystem();
    @$fileSystem->remove($this->getInteractifDataPath());
  }


    public function browseDocuments($interactif_id, $visiteur_id_param = "", $params = array('page_size' => 100, 'offset' => 1))
    {
        $sf_root_dir = sfConfig::get('sf_root_dir').'/web/interactif';
        $host_url = 'http://'. sfConfig::get('app_front_url') . '/interactif';
        $finder = new sfFinder;
        $finder->follow_link();
        $dirs = array();
        $visiteur_id = '';
        $path = '/' . $interactif_id . '/';
        //die($sf_root_dir.$path);
        $cpt_offset = 0;
        $cpt_page_size = 0;
        $old_visiteur = '';
        foreach($finder->in($sf_root_dir.$path.'/'.$visiteur_id_param) as $file) {
            //echo 'search in '. $file;

            if(is_file($file)) {
                //echo $file .' == ' . $sf_root_dir.$path .'<br>';
                $filepath = str_replace($sf_root_dir.$path, "", $file);
                //echo $filepath. ' <br>';
                $split = explode("/" , $filepath);
                //print_r($split);
                if(count($split) < 2)continue;

                $cpt_offset++;

                //echo "\n OFFSET= ".$cpt_offset . ' <= '.$params['offset'];
                if($cpt_offset <=  $params['offset']){
                    continue;
                }
                if(count($split) > 1){

                    if($cpt_page_size < $params['page_size']){
                        //echo "\n PAGESIZE= ".$cpt_page_size . ' < '.$params['page_size'];
                        if($visiteur_id_param == ''){
                            $visiteur_id = $split[0];
                        }else{
                            $visiteur_id = $visiteur_id_param;
                        }

                        $visiteur = array();
                        if($old_visiteur != $visiteur_id){
                            $visiteur_info = Doctrine::getTable('Visiteur')->findOneByGuid($visiteur_id);

                            if($visiteur_info){
                                $visiteur = array('pseudo_son' => $visiteur_info->getPseudoSon());
                            }
                        }

                        $old_visiteur = $visiteur_id;

                        $filename = $split[1];

                        if($filename == '.DS_Store')continue;
                        $url_path = str_replace('//', '/', $path. '/' . $visiteur_id. '/' . $filename);
                        $result = array("url" => $host_url . $url_path, "creation_date" => date("Y-m-d H:i:s", filemtime($file)));

                        $dirs["visiteurs"][$visiteur_id][] = array_merge($visiteur, $result);
                    }
                    $cpt_page_size++;
                }
            }
        }
        //print_r($dirs);
        return $dirs;
    }


}
